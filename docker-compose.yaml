version: '3.8'

services:
  api-service:
    build:
      context: api-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - zookeeper
      - kafka
      - db
    env_file:
      - api-service/.env
    networks:
      - mynetwork

  data-service:
    build:
      context: data-service
      dockerfile: Dockerfile
#    ports:
#      - "8081:8081"
    depends_on:
      - zookeeper
      - kafka
      - db
    env_file:
      - data-service/.env
    networks:
      - mynetwork

  db:
    image: postgres:latest
    restart: always
    env_file:
      - postgres.env
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - mynetwork

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - mynetwork

  kafka:
    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "post:1:1,comment:1:1"
      KAFKA_LISTENERS: PLAINTEXT://:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - mynetwork

volumes:
  data:

networks:
  mynetwork:
    driver: bridge